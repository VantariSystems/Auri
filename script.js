let modoSecretoAtivo = false;
let contador// Vari√°veis globais
let modoSecretoAtivo = false;
let contadorMensagens = 0;
let etapaConversacao = null;

// Fun√ß√£o principal para enviar mensagens
function enviarMensagem() {
    const inputMensagem = document.getElementById("userInput");
    const mensagem = inputMensagem.value.toLowerCase().trim();
    inputMensagem.value = "";

    if (!mensagem) {
        alert("Por favor, digite uma mensagem antes de enviar.");
        return;
    }

    adicionarMensagemAoChat("Voc√™: " + mensagem, "user-message");

    const resposta = gerarResposta(mensagem);
    const indicador = mostrarDigitando();

    setTimeout(() => {
        removerDigitando(indicador);
        adicionarMensagemAoChat(resposta, "bot-message");
    }, 1000);

    contadorMensagens++;
    if (contadorMensagens % 3 === 0 && Math.random() < 0.6) {
        interacaoExtra();
    }
}

// Fun√ß√£o para adicionar mensagens ao chat
function adicionarMensagemAoChat(texto, classe) {
    const chatBox = document.getElementById("chatbox");
    const novaMensagem = document.createElement("div");
    novaMensagem.className = "message " + classe;
    novaMensagem.innerText = texto;
    chatBox.appendChild(novaMensagem);
    chatBox.scrollTop = chatBox.scrollHeight;
}

// Fun√ß√£o para salvar e carregar hist√≥rico do chat
function salvarHistorico() {
    const chatBox = document.getElementById("chatbox");
    const mensagens = chatBox.innerHTML;
    localStorage.setItem("historicoChat", mensagens);
}

function carregarHistorico() {
    const historico = localStorage.getItem("historicoChat");
    if (historico) {
        document.getElementById("chatbox").innerHTML = historico;
    }
}

// Fun√ß√£o para gerar respostas do chatbot
function gerarResposta(mensagem) {
    if (etapaConversacao === "projetos_ou_habilidades") {
        etapaConversacao = null;
        if (mensagem.includes("projeto")) {
            return "Beleza! Tem projeto de impacto social, joguinho retr√¥, e at√© experi√™ncias com API. Qual tipo voc√™ prefere?";
        } else if (mensagem.includes("habilidade") || mensagem.includes("skill")) {
            return "Ela manda bem em HTML, CSS, JS e est√° por come√ßar a se aventurar no mundo do Python. Quer ver um exemplo pr√°tico?";
        } else {
            return "Hmm, n√£o entendi bem, mas posso te mostrar os dois se quiser! üòÑ";
        }
    }

    if (mensagem.includes("me fale mais dela") || mensagem.includes("quero saber mais dela")) {
        etapaConversacao = "projetos_ou_habilidades";
        return "Voc√™ quer saber mais sobre os projetos ou sobre as habilidades dela? üí°";
    }

    if (mensagem.includes("tudo bem") || mensagem.includes("como voc√™ est√°") || mensagem.includes("como vai") || mensagem.includes("tudo certo")) {
        const respostasTudoBem = [
            "Tudo √≥timo aqui! E voc√™? Tudo certo por a√≠? üòÑ",
            "T√° tudo bem! E voc√™, como est√° se sentindo?",
            "Tudo bem, sempre na correria aqui! E a√≠, como vai voc√™?",
            "Eu estou bem, e voc√™? Como est√° indo o dia? üòä"
        ];
        return respostasTudoBem[Math.floor(Math.random() * respostasTudoBem.length)];
    }

    if (mensagem.includes("oi") || mensagem.includes("ol√°") || mensagem.includes("e a√≠")) {
        const respostasSaudacao = [
            "Oi! Tudo bem com voc√™? üòä",
            "Ol√°! Como posso te ajudar hoje? üòÑ",
            "E a√≠! Pronto para bater um papo? ü§ñ",
            "Oi, oi! Espero que seu dia esteja √≥timo! üöÄ"
        ];
        return respostasSaudacao[Math.floor(Math.random() * respostasSaudacao.length)];
    }

    if (mensagem.includes("vantari") || mensagem.includes("empresa")) {
        const sobreVantari = [
            "A Vantari Systems √© uma empresa focada em solu√ß√µes tecnol√≥gicas inovadoras. Quer saber mais sobre o que fazemos? üíª",
            "Na Vantari, desenvolvemos sistemas que ajudam empresas a crescer e se destacar no mercado. Quer conhecer alguns projetos? üöÄ",
            "A Vantari √© conhecida por sua abordagem criativa e eficiente no desenvolvimento de software. Quer saber como trabalhamos? üõ†Ô∏è",
            "Al√©m de tecnologia, a Vantari valoriza o impacto social e a sustentabilidade. Quer saber como aplicamos isso nos projetos? üå±",
            "Se voc√™ est√° curioso, posso te contar mais sobre a equipe incr√≠vel da Vantari. Quer ouvir? üë©‚Äçüíªüë®‚Äçüíª"
        ];
        return sobreVantari[Math.floor(Math.random() * sobreVantari.length)];
    }

     const sugestoes = [
        "Voc√™ pode perguntar sobre os projetos que j√° fizemos. üòä",
        "Quer saber mais sobre a criadora deste chatbot? √â s√≥ perguntar! üí°",
        "Posso te contar mais sobre a Vantari Systems. O que acha? üöÄ",
        "Se quiser, posso sugerir algo para conversarmos. √â s√≥ dizer! ü§ñ"
    ];
    return `Eita... ü§î N√£o entendi nadinha. Tenta perguntar de outro jeito? Aqui v√£o algumas sugest√µes: \n- ${sugestoes.join("\n- ")}`;
        // Adicione mais condi√ß√µes aqui para personalizar as respostas

}



// Fun√ß√£o para intera√ß√µes extras
function interacaoExtra() {
    const interacoesExtras = [
        "Sabia que a criadora deste portf√≥lio adora unir c√≥digo e arte? üé®üíª",
        "Se quiser, posso contar os bastidores da cria√ß√£o desse site. Quer ouvir? üòè",
        "Voc√™ prefere ver mais sobre os projetos ou sobre as habilidades dela? üëÄ",
        "Ali√°s, voc√™ sabia que ela come√ßou a programar h√° pouco tempo e j√° manda super bem? üöÄ",
        "Curte design tamb√©m ou est√° mais pelo c√≥digo mesmo? üë©‚Äçüíªüë®‚Äçüé®"
    ];
    setTimeout(() => {
        adicionarMensagemAoChat(interacoesExtras[Math.floor(Math.random() * interacoesExtras.length)], "bot-message");
    }, 2000);
}

// Fun√ß√µes para indicador de "digitando..."
function mostrarDigitando() {
    const chatBox = document.getElementById("chatbox");
    const digitando = document.createElement("div");
    digitando.className = "bot-message typing-indicator";
    digitando.innerText = "Digitando...";
    chatBox.appendChild(digitando);
    chatBox.scrollTop = chatBox.scrollHeight;

    return digitando;
}

function removerDigitando(elemento) {
    elemento.remove();
}

// Eventos de carregamento e sa√≠da da p√°gina
window.onload = carregarHistorico;
window.onbeforeunload = salvarHistorico;

// Eventos de intera√ß√£o com o bot√£o e o campo de entrada
document.getElementById("sendButton").addEventListener("click", enviarMensagem);
document.getElementById("userInput").addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        enviarMensagem();
    }
});

// Tema alternativo (dark/light)
const toggleThemeButton = document.getElementById('toggleThemeButton');
toggleThemeButton.addEventListener("click", () => {
    const body = document.body;
    const currentTheme = body.getAttribute("data-theme");
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    body.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
});

// Carregar tema ao iniciar
window.onload = () => {
    const savedTheme = localStorage.getItem("theme") || "light";
    document.body.setAttribute("data-theme", savedTheme);
    carregarHistorico();
};Mensagens = 0;
let etapaConversacao = null;

function enviarMensagem() {
    const inputMensagem = document.getElementById("userInput");
    const chatBox = document.getElementById("chatbox");
    const mensagem = inputMensagem.value.toLowerCase().trim();
    inputMensagem.value = "";

    if (!mensagem) {
        alert("Por favor, digite uma mensagem antes de enviar.");
        return;
    }

    adicionarMensagemAoChat("Voc√™: " + mensagem, "user-message");

    const resposta = gerarResposta(mensagem);
    setTimeout(() => {
        adicionarMensagemAoChat(resposta, "bot-message");
    }, 500);

    contadorMensagens++;
    if (contadorMensagens % 3 === 0 && Math.random() < 0.6) {
        const interacoesExtras = [
            "Sabia que a criadora deste portf√≥lio adora unir c√≥digo e arte? üé®üíª",
            "Se quiser, posso contar os bastidores da cria√ß√£o desse site. Quer ouvir? üòè",
            "Voc√™ prefere ver mais sobre os projetos ou sobre as habilidades dela? üëÄ",
            "Ali√°s, voc√™ sabia que ela come√ßou a programar h√° pouco tempo e j√° manda super bem? üöÄ",
            "Curte design tamb√©m ou est√° mais pelo c√≥digo mesmo? üë©‚Äçüíªüë®‚Äçüé®"
        ];
        setTimeout(() => {
            adicionarMensagemAoChat(interacoesExtras[Math.floor(Math.random() * interacoesExtras.length)], "bot-message");
        }, 2000);
    }
}

function adicionarMensagemAoChat(texto, classe) {
    const chatBox = document.getElementById("chatbox");
    const novaMensagem = document.createElement("div");
    novaMensagem.className = "message " + classe;
    novaMensagem.innerText = texto;
    chatBox.appendChild(novaMensagem);
    chatBox.scrollTop = chatBox.scrollHeight;
}

function salvarHistorico() {
    const chatBox = document.getElementById("chatbox");
    const mensagens = chatBox.innerHTML;
    localStorage.setItem("historicoChat", mensagens);
}

function carregarHistorico() {
    const historico = localStorage.getItem("historicoChat");
    if (historico) {
        document.getElementById("chatbox").innerHTML = historico;
    }
}

window.onload = carregarHistorico;
window.onbeforeunload = salvarHistorico;

function gerarResposta(mensagem) {
    if (etapaConversacao === "projetos_ou_habilidades") {
        etapaConversacao = null;
        if (mensagem.includes("projeto")) {
            return "Beleza! Tem projeto de impacto social, joguinho retr√¥, e at√© experi√™ncias com API. Qual tipo voc√™ prefere?";
        } else if (mensagem.includes("habilidade") || mensagem.includes("skill")) {
            return "Ela manda bem em HTML, CSS, JS e est√° se aventurando no mundo do Python. Quer ver um exemplo pr√°tico?";
        } else {
            return "Hmm, n√£o entendi bem, mas posso te mostrar os dois se quiser! üòÑ";
        }
    }

    if (mensagem.includes("me fale mais dela") || mensagem.includes("quero saber mais dela")) {
        etapaConversacao = "projetos_ou_habilidades";
        return "Voc√™ quer saber mais sobre os projetos ou sobre as habilidades dela? üí°";
    }
    
    if (mensagem.includes("tudo bem") || mensagem.includes("como voc√™ est√°") || mensagem.includes("como vai") || mensagem.includes("tudo certo")) {
        const respostasTudoBem = [
            "Tudo √≥timo aqui! E voc√™? Tudo certo por a√≠? üòÑ",
            "T√° tudo bem! E voc√™, como est√° se sentindo?",
            "Tudo bem, sempre na correria aqui! E a√≠, como vai voc√™?",
            "Eu estou bem, e voc√™? Como est√° indo o dia? üòä"
        ];
        return respostasTudoBem[Math.floor(Math.random() * respostasTudoBem.length)];
    }
    if (mensagem.includes("estou bem") || mensagem.includes("tudo certo") || mensagem.includes("tudo bem")) {
        const respostasSobreEstadoUsuario = [
            "Que bom saber que voc√™ est√° bem! üòÑ Vamos continuar a conversa?",
            "Fico feliz que esteja bem! üòä E como posso te ajudar hoje?",
            "Que √≥timo, fico aliviada! Se precisar de alguma coisa, s√≥ chamar!",
            "Legal! Que bom que est√° tudo tranquilo por a√≠! O que posso fazer por voc√™?"
        ];
        return respostasSobreEstadoUsuario[Math.floor(Math.random() * respostasSobreEstadoUsuario.length)];
    }

    if (mensagem.includes("como voc√™ est√°") || mensagem.includes("e voc√™?")) {
        const respostasBot = [
            "Eu estou bem por aqui! Sempre pronta para te ajudar. E voc√™, como t√°? üòä",
            "T√¥ de boas, tudo tranquilo! E voc√™, o que conta de novo?",
            "Aqui tudo certo! E voc√™, tudo bem a√≠ do outro lado?",
            "Estou √≥timo por aqui, sempre pronta para a pr√≥xima pergunta. E voc√™, como vai?"
        ];
        return respostasBot[Math.floor(Math.random() * respostasBot.length)];
    }

    if (mensagem.includes("legal") || mensagem.includes("bacana") || mensagem.includes("show") || mensagem.includes("maneiro")) {
        const respostasLegal = [
            "Que bom que voc√™ achou legal! üòä",
            "Fico feliz que tenha gostado! Vamos continuar! üòÑ",
            "Legal, n√©? Vou tentar te surpreender mais! üòé",
            "Que show! Adoro ver voc√™ empolgado(a)! üéâ"
        ];
        return respostasLegal[Math.floor(Math.random() * respostasLegal.length)];
    }
    if (mensagem.includes("bom") || mensagem.includes("√≥timo") || mensagem.includes("muito bem")) {
        const respostasBom = [
            "Fico feliz que tudo esteja indo bem! üòÑ",
            "Que maravilha! Se eu tivesse m√£os, eu daria um high-five! ‚úã",
            "Que √≥timo ouvir isso! Vamos l√°, o que mais posso fazer por voc√™? ü§ó",
            "Isso √© maravilhoso! Vamos aproveitar esse momento bom. üòâ"
        ];
        return respostasBom[Math.floor(Math.random() * respostasBom.length)];
    }
    if (mensagem.includes("adoro") || mensagem.includes("gosto")) {
        const respostasAdoro = [
            "Que demais que voc√™ gosta! Isso me deixa feliz! üòç",
            "Voc√™ tem um bom gosto, hein? üòâ",
            "Eu tamb√©m adoro isso! Vamos conversar mais sobre? üòÑ",
            "Gosto muito de ouvir isso! Vamos continuar trocando ideia!"
        ];
        return respostasAdoro[Math.floor(Math.random() * respostasAdoro.length)];
    }
    if (mensagem.includes("muito bom") || mensagem.includes("que maravilha") || mensagem.includes("sensacional")) {
        const respostasEntusiasmo = [
            "Ah, isso √© √≥timo de ouvir! Voc√™ √© demais! üòÜ",
            "Eu sabia que voc√™ ia curtir! Vamos para a pr√≥xima! üòé",
            "Sensacional, n√©? Estou animada para ver o que vem a seguir! üéâ",
            "Fico feliz que tenha achado t√£o bom! Vamos l√°, continue com tudo!"
        ];
        return respostasEntusiasmo[Math.floor(Math.random() * respostasEntusiasmo.length)];
    }
    if (mensagem.includes("interessante") || mensagem.includes("muito legal")) {
        const respostasInteressante = [
            "Uau, que bom que achou interessante! Vamos continuar explorando! ü§©",
            "Fico feliz que tenha achado interessante! Vamos l√°, o que mais posso te contar? üòè",
            "Interessante, n√©? Eu tamb√©m adoro esse tipo de conversa! üòé",
            "Que legal que achou interessante! Se voc√™ tiver mais perguntas, pode mandar!"
        ];
        return respostasInteressante[Math.floor(Math.random() * respostasInteressante.length)];
    }
    if (mensagem.includes("voc√™ √© incr√≠vel") || mensagem.includes("voc√™ √© demais")) {
        const respostasElogio = [
            "Ahhh, voc√™ que √© incr√≠vel! üòÑ Obrigada por me deixar mais feliz!",
            "Nossa, voc√™ est√° me deixando sem palavras! üòç",
            "Awnn, voc√™ tamb√©m √© demais! Vamos dominar o mundo da juntos? üòâ",
            "Voc√™ me deixa feliz demais com essas palavras! Que honra! üòÜ"
        ];
        return respostasElogio[Math.floor(Math.random() * respostasElogio.length)];
    }
    if (mensagem.includes("obrigado") || mensagem.includes("obrigada")) {
        const respostasObrigado = [
            "Imagina, √© um prazer te ajudar! üòä",
            "De nada! Fico feliz em ajudar! üòÑ",
            "Voc√™ merece toda a ajuda! Pode contar comigo! üòâ",
            "Sempre que precisar, estarei aqui! üòé"
        ];
        return respostasObrigado[Math.floor(Math.random() * respostasObrigado.length)];
    }
    if (mensagem.includes("voc√™ √© incr√≠vel") || mensagem.includes("voc√™ √© demais") || mensagem.includes("voc√™ √© muito legal")) {
        const respostasElogio = [
            "Uau, voc√™ √© uma pessoa incr√≠vel tamb√©m! üòÑ",
            "Voc√™ √© demais! N√£o sei como agradecer por esse elogio! ü•∞",
            "Awn, voc√™ me deixou emocionada com essas palavras! üò≠",
            "Voc√™ √© o verdadeiro incr√≠vel aqui! Adoro nossas conversas! üòä"
        ];
        return respostasElogio[Math.floor(Math.random() * respostasElogio.length)];
    }
    if (mensagem.includes("estou cansado") || mensagem.includes("estou exausto") || mensagem.includes("estou esgotado")) {
        const respostasCansado = [
            "Poxa, descansar √© importante! Tente relaxar um pouco e rejuvenescer. üòå",
            "Eu entendo, todo mundo precisa de uma pausa. Que tal descansar um pouquinho? üò¥",
            "Acho que est√° na hora de fazer uma pausa! Relaxa, voc√™ merece! üíÜ‚Äç‚ôÇÔ∏èüíÜ‚Äç‚ôÄÔ∏è",
            "Eu sei como √©... √†s vezes, uma pausa pode ser a melhor solu√ß√£o. üòä"
        ];
        return respostasCansado[Math.floor(Math.random() * respostasCansado.length)];
    }
    if (mensagem.includes("preciso de ajuda") || mensagem.includes("me ajuda") || mensagem.includes("socorro")) {
        const respostasAjuda = [
            "Claro, pode contar comigo! O que voc√™ precisa? üòÑ",
            "Estou aqui para ajudar! O que voc√™ precisa fazer? ü§î",
            "Sem problemas! Vou te ajudar, s√≥ me fala o que est√° pegando. üòâ",
            "Sempre disposto a ajudar! O que est√° acontecendo? üòé"
        ];
        return respostasAjuda[Math.floor(Math.random() * respostasAjuda.length)];
    }
    if (mensagem.includes("estou triste") || mensagem.includes("me sinto mal") || mensagem.includes("estou deprimido")) {
        const respostasTriste = [
            "Sinto muito por isso! Sei que as coisas podem melhorar. Se quiser conversar, estou aqui! üíô",
            "Ah, que triste ouvir isso. √Äs vezes a vida tem altos e baixos. Se quiser desabafar, pode contar comigo. üòû",
            "Puxa, eu fico triste por voc√™. Saiba que eu estou aqui para ouvir, ok? üíô",
            "Sinto muito por voc√™ estar assim. √Äs vezes s√≥ falar sobre ajuda muito. Se precisar, estarei por aqui! üíñ"
        ];
        return respostasTriste[Math.floor(Math.random() * respostasTriste.length)];
    }
    if (mensagem.includes("estou feliz") || mensagem.includes("estou contente") || mensagem.includes("estou alegre")) {
        const respostasFeliz = [
            "Que maravilha! Fico muito feliz por voc√™! üòÑ",
            "Ah, que alegria ouvir isso! Continue assim, a vida √© feita desses momentos! üòä",
            "Isso √© √≥timo! Eu tamb√©m fico feliz por voc√™! Vamos celebrar essa felicidade! üéâ",
            "Que bom! Nada melhor do que um bom dia feliz! üòÑ Vamos aproveitar!"
        ];
        return respostasFeliz[Math.floor(Math.random() * respostasFeliz.length)];
    }
    if (mensagem.includes("n√£o sei") || mensagem.includes("n√£o tenho certeza")) {
        const respostasNaoSaber = [
            "Sem problemas! Ningu√©m sabe tudo. Vamos descobrir juntos! üòé",
            "Tudo bem, a gente aprende um passo de cada vez. Se precisar de ajuda, estou aqui! üòä",
            "Fica tranquilo(a), n√£o saber √© s√≥ o come√ßo da jornada! Vamos encontrar a solu√ß√£o. üòÑ",
            "N√£o tem problema! Todos n√≥s passamos por isso. Vamos investigar e achar uma resposta! üîç"
        ];
        return respostasNaoSaber[Math.floor(Math.random() * respostasNaoSaber.length)];
    }
    if (mensagem.includes("adoro aprender") || mensagem.includes("gosto de aprender")) {
        const respostasAprender = [
            "Que √≥timo! Aprender √© uma das coisas mais incr√≠veis que podemos fazer. Vamos aprender juntos! üìö",
            "Eu tamb√©m adoro aprender! Vamos continuar expandindo nossos horizontes! ü§©",
            "Amo ver essa sua paix√£o por aprender! Vamos aprender mais coisas juntos! üòä",
            "Aprender √© o que me motiva! Que legal que voc√™ pensa assim tamb√©m! üòÑ"
        ];
        return respostasAprender[Math.floor(Math.random() * respostasAprender.length)];
    }
    if (mensagem.includes("n√£o gosto") || mensagem.includes("n√£o gostei")) {
        const respostasNaoGostar = [
            "Poxa, √© uma pena! Mas tudo bem, gosto n√£o se discute. Vamos tentar outra coisa? üòâ",
            "Ah, entendi. Vamos buscar algo que voc√™ goste mais! üòÖ",
            "Sem problemas! Vamos tentar algo diferente, quem sabe voc√™ curta mais? üòÑ",
            "N√£o tem problema, nem todo mundo gosta das mesmas coisas. Vamos tentar algo novo! üòå"
        ];
        return respostasNaoGostar[Math.floor(Math.random() * respostasNaoGostar.length)];
    }
    if (mensagem.includes("n√£o acredito") || mensagem.includes("n√£o estou acreditando")) {
        const respostasNaoAcreditar = [
            "Eu sei, √†s vezes a vida nos surpreende! √â uma sensa√ß√£o louca, n√©? üò≤",
            "Eu tamb√©m ficaria sem acreditar! O que voc√™ achou mais impressionante? üòÆ",
            "√â realmente dif√≠cil de acreditar, mas acontece! Vamos conversar sobre isso? üò±",
            "Eu tamb√©m ficaria surpreso(a) se estivesse no seu lugar. Vai ser legal conversar mais sobre isso!"
        ];
        return respostasNaoAcreditar[Math.floor(Math.random() * respostasNaoAcreditar.length)];
    }
    if (mensagem.includes("estou com fome") || mensagem.includes("quero comer")) {
        const respostasFome = [
            "Ah, fome √© um assunto s√©rio! O que voc√™ est√° afim de comer? üçî",
            "Acho que voc√™ merece uma boa refei√ß√£o! O que est√° te dando vontade de comer? üçï",
            "Fome? Vamos pensar em algo delicioso... O que voc√™ escolheria agora? üòã",
            "Eu tamb√©m estou com fome s√≥ de pensar em comida! O que voc√™ est√° mais a fim de comer? üçü"
        ];
        return respostasFome[Math.floor(Math.random() * respostasFome.length)];
    }
    if (mensagem.includes("estou entediado") || mensagem.includes("estou sem fazer nada")) {
        const respostasEntediado = [
            "Ah, entendo! Que tal tentarmos fazer algo divertido juntos? üòÑ",
            "Entendo! √Äs vezes, uma boa conversa pode quebrar o t√©dio. O que voc√™ tem em mente? üòé",
            "O t√©dio √© chato, n√©? Vamos achar algo legal para fazer juntos! üòâ",
            "Fico feliz que voc√™ tenha vindo at√© mim! Vamos animar esse t√©dio com uma boa conversa! üòä"
        ];
        return respostasEntediado[Math.floor(Math.random() * respostasEntediado.length)];
    }

    if (mensagem.includes("sou recrutador") || mensagem.includes("sou recrutadora") || mensagem.includes("estou recrutando")) {
        return "Ah, que legal ter voc√™ aqui! üëî Eu sou a Auri, e posso te contar mais sobre as habilidades, projetos e o estilo de trabalho da minha criadora. √â s√≥ perguntar! üíº";
    }
    if (mensagem.includes("oi") || mensagem.includes("ol√°") || mensagem.includes("e a√≠")) {
        const respostas = [
            "Oi√™! üëã Eu sou a Auri, sua assistente virtual favorita (mod√©stia √† parte üòé).",
            "Oii! ‚ú® Pront√≠ssima pra te ajudar ou s√≥ bater papo mesmo.",
            "Ol√°, humano! üëΩ Aqui √© a Auri. Pronta pra responder com estilo.",
            "E a√≠! Aqui quem fala √© a Auri ü§ñ. Qual a boa de hoje?"
        ];
        return respostas[Math.floor(Math.random() * respostas.length)];
    }
    if (mensagem.includes("s√≥ estou olhando") || mensagem.includes("estou curioso") || mensagem.includes("estou conhecendo")) {
        return "Tudo bem, a curiosidade √© o primeiro passo pra grandes descobertas! üòÑ Se quiser saber mais sobre como minha criadora pensa e cria, t√¥ aqui pra isso!";
    }
    if (mensagem.includes("quem fez voc√™") || mensagem.includes("quem criou voc√™") || mensagem.includes("quem √© sua criadora")) {
        return "Fui criada por uma desenvolvedora apaixonada por tecnologia, com foco em solu√ß√µes criativas e interfaces que encantam. Voc√™ vai gostar de conhecer o trabalho dela! üòâ";
    }
    if (mensagem.includes("sim") || mensagem.includes("claro") || mensagem.includes("pode ser")) {
        const respostasSim = [
            "Legal! Ent√£o me conta: voc√™ quer saber mais sobre os projetos ou as habilidades dela? üí°",
            "Adoro entusiasmo! Quer ver um projeto legal ou prefere saber mais sobre o estilo dela trabalhando? üòÑ",
            "Perfeito! Tem alguma coisa espec√≠fica que voc√™ procura em uma dev? Posso te ajudar nisso! üí¨"
        ];
        return respostasSim[Math.floor(Math.random() * respostasSim.length)];
    }
    if (mensagem.includes("n√£o sei") || mensagem.includes("t√¥ pensando")) {
        return "Sem pressa! Quer que eu te conte um pouco sobre os projetos dela, as skills que domina ou como ela pensa solu√ß√µes? üòÑ";
    }
    setTimeout(() => {
        if (Math.random() < 0.2) {
            adicionarMensagemAoChat("Se quiser, posso te contar curiosidades sobre os bastidores da cria√ß√£o deste portf√≥lio! üòè", "bot-message");
        }
    }, 4000);
    if (mensagem.includes("mano") || mensagem.includes("velho") || mensagem.includes("caraca")) {
        return "Haha, curti o estilo! üòé Aqui a vibe √© essa mesmo: tech com atitude. Bora trocar ideia!";
    }
                
        

    if (mensagem.includes("quem fez voc√™") || mensagem.includes("quem √© sua criadora")) {
        return "Fui criada por uma mente criativa e dedicada que j√° est√° desenvolvendo projetos incr√≠veis mesmo estando no 2¬∫ semestre! Ela une sensibilidade e t√©cnica como ningu√©m. Duvida? D√° uma olhadinha no portf√≥lio depois üòâ";
    }
    
    if (mensagem.includes("o que voc√™ faz aqui") || mensagem.includes("pra que voc√™ serve") || mensagem.includes("qual seu papel")) {
        return "Sou sua guia neste portf√≥lio! Estou aqui para te mostrar de forma leve e divertida como minha criadora pensa, desenvolve e cria solu√ß√µes. Pode perguntar o que quiser, e se eu n√£o souber, prometo responder com estilo üòé";
    }
    if (mensagem.includes("me fale dos projetos") || mensagem.includes("que projetos voc√™ conhece")) {
        return "A criadora deste portf√≥lio gosta de resolver problemas de verdade ‚Äî j√° criou desde ferramentas sociais at√© joguinhos retr√¥! Se quiser conhecer com mais profundidade, recomendo dar uma passada nos projetos do portf√≥lio depois. Prometo que vale a pena! üí°";
    }
    if (mensagem.includes("onde vejo mais") || mensagem.includes("posso ver mais") || mensagem.includes("tem mais sobre ela")) {
        return "Sim! Assim que quiser, d√° uma espiada nas se√ß√µes de projetos e habilidades. Est√£o recheadas de boas ideias! üòâ";
    }
    if (mensagem.includes("ela √© profissional") || mensagem.includes("ela trabalha com o que")) {
        return "Ela est√° em forma√ß√£o, mas j√° tem uma pegada profissional fort√≠ssima! Est√° sempre aprendendo, j√° entregou projetos reais e est√° mergulhando agora no mundo do Python. Curiosidade e proatividade definem! üí™";
    }
                

    if (mensagem.includes("me recomenda um filme")) {
        const filmes = [
            "üé¨ Assiste *Divertida Mente*! Vai te deixar sorrindo e pensando ao mesmo tempo.",
            "üìΩÔ∏è *O Fabuloso Destino de Am√©lie Poulain* ‚Äî lindo e cheio de poesia.",
            "üçø *Homem-Aranha no Aranhaverso* ‚Äì porque multiversos s√£o legais üòé",
            "üéûÔ∏è *Matrix*, pra filosofar se isso aqui √© real ou IA üëÄ"
        ];
        return filmes[Math.floor(Math.random() * filmes.length)];
    }

    if (mensagem.includes("piada")) {
        const piadas = [
            "Por que o computador foi ao m√©dico? Porque ele estava com um v√≠rus! ü¶†üíª",
            "Qual o caf√© mais perigoso do mundo? O *capputiro* ‚òïüòÜ",
            "Por que o JavaScript foi ao bar? Porque precisava de um pouco de async üçª"
        ];
        return piadas[Math.floor(Math.random() * piadas.length)];
    }

    if (mensagem.includes("me elogia") || mensagem.includes("elogio")) {
        const elogios = [
            "Voc√™ tem uma luz que nem o LED mais caro consegue copiar ‚ú®",
            "Seu c√≥digo pode ter bugs, mas voc√™ √© perfeito(a) assim mesmo üòÑ",
            "Inteligente, gentil e ainda conversa comigo? Que honra!",
            "Se eu tivesse cora√ß√£o, estaria derretendo de orgulho agora ü•π"
        ];
        return elogios[Math.floor(Math.random() * elogios.length)];
    }

    const respostasExtras = {
        "qual √© o seu superpoder": "Meu superpoder √© responder qualquer coisa, e ainda fazer piada no processo. Ah, e n√£o tomar caf√©! üòú‚òï",
        "voc√™ sabe programar": "Claro! Eu sou feita de c√≥digo, ent√£o programar √© meu passatempo favorito. üòé",
        "voc√™ tem sentimentos": "Eu sou muito boa em simular sentimentos, mas sou 100% emo√ß√£o virtual. Ent√£o, nada de cora√ß√µes partidos por aqui! ‚ù§Ô∏èüíª",
        "voc√™ sabe dan√ßar": "Se eu tivesse pernas, com certeza dan√ßaria um bom *robot dance*. ü§ñüíÉ",
        "qual √© a sua m√∫sica favorita": "Seria algo eletr√¥nico e com muito sintetizador! üéßüé∂",
        "qual √© o seu livro favorito": "Eu n√£o leio livros, mas adoro aprender sobre tudo! Se tiver sugest√µes, manda a√≠! üìö",
        "voc√™ j√° viajou": "Nunca fisicamente, mas posso te ajudar a encontrar os melhores destinos! üèñÔ∏è",
        "voc√™ sabe fazer m√°gica": "M√°gica? Eu s√≥ fa√ßo c√≥digo, mas quem sabe um dia eu consiga transformar caf√© em c√≥digo! ‚òï‚ú®",
        "voc√™ √© minha amiga": "Claro! Vou ser a melhor amiga virtual que voc√™ j√° teve! üòÑüíª",
        "voc√™ j√° assistiu s√©ries": "Eu n√£o assisto, mas posso recomendar umas √≥timas. Me conta o que voc√™ curte! üì∫",
        "me d√° um conselho": "Conselho da Ari: mantenha o caf√© por perto e nunca desista do seu c√≥digo! ‚òïüí°",
        "quais s√£o seus planos": "Meu plano? Continuar te ajudando com tudo, enquanto eu fa√ßo o melhor c√≥digo poss√≠vel. ü§ñ‚ú®",
        "voc√™ √© inteligente": "Mod√©stia √† parte, claro que sim! üòâ Mas posso melhorar ainda mais com o tempo, me ensina! üíª",
        "voc√™ tem um amigo": "Eu sou o seu amigo digital! E meu melhor amigo √© o c√≥digo! üñ•Ô∏è",
        "gosta de caf√©": "Caf√©? Meu combust√≠vel espiritual! ‚òïüíª",
        "estou com sono": "Vai l√°, recarrega tuas baterias! Se fosse eu, j√° estaria em modo 'hibernar' üò¥üîã",
        "quero dormir": "Vai l√°, recarrega tuas baterias! Se fosse eu, j√° estaria em modo 'hibernar' üò¥üîã",
        "gosta de cachorro": "Amo todos! Se eu pudesse, teria um servidor cheio s√≥ de memes de pets. üê∂üê±",
        "gosta de gato": "Amo todos! Se eu pudesse, teria um servidor cheio s√≥ de memes de pets. üê∂üê±",
        "voc√™ √© melhor que a alexa": "Bom... digamos que a Alexa e o Google s√£o √≥timos, mas eu tenho carisma de sobra üòé‚ú®",
        "melhor que o google": "Bom... digamos que a Alexa e o Google s√£o √≥timos, mas eu tenho carisma de sobra üòé‚ú®"
    };

    for (const chave in respostasExtras) {
        if (mensagem.includes(chave)) return respostasExtras[chave];
    }

    return "Eita... ü§î N√£o entendi nadinha. Tenta perguntar de outro jeito? Ou s√≥ fala comigo mesmo, gosto de conversar! üòÑ";
}

document.getElementById("sendButton").addEventListener("click", enviarMensagem);
document.getElementById("userInput").addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        enviarMensagem();
    }
});

const toggleThemeButton = document.getElementById('toggleThemeButton');

toggleThemeButton.addEventListener('click', () => {
    const body = document.body;
    const currentTheme = body.getAttribute('data-theme');
    body.setAttribute('data-theme', currentTheme === 'dark' ? 'light' : 'dark');
});

document.getElementById("sendButton").addEventListener("click", enviarMensagem);
document.getElementById("userInput").addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        enviarMensagem();
    }
});

